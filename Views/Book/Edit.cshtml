@model NewBooksEntity

@{
    ViewData["Title"] = "Editing a Book";
}

<style>
    #imagePreview{
        height: 50px
    }
</style>

<form class="container mx-xs-2 p-md-4 p-3 col-md-6 mt-3 rounded" asp-action="EditBook" asp-controller="Book" method="post" enctype="multipart/form-data">
    <div class="mt-2">
        <div class="mx-auto col-lg-8">
            <a class="underline text-muted" asp-controller="Book" asp-action="Index">back</a> 
            <h1 class="mt-3">Edit @Model.Title</h1>
            <h4 class="mb-3 text-muted">By @Model.Author</h4>
            <input readonly asp-for="Id" type="hidden" value="@Model.Id" /> 
            <div class="form-group mb-2">
                <label>Book Title</label>
                <input required asp-for="Title" type="text" class="form-control" value="@Model.Title"/>
            </div>
            <div class="form-group mb-2">
                <label>Book Author</label>
                <input required asp-for="Author" type="text" class="form-control" value="@Model.Author"/>
            </div>
            <div class="form-group mb-2">
                <label>Book Genre</label>
                <input required asp-for="Genre" type="text" class="form-control" value="@Model.Genre"/>
            </div>
            <div class="form-group mb-2">
                <label>Book ISBN</label>
                <input required asp-for="ISBN" type="text" class="form-control" value="@Model.ISBN"/>
            </div>
            <div class="form-group mb-2">
                <label>Date Published</label>
                <input required asp-for="DatePublished" id="date" max="" type="date" class="form-control" value='@Model.DatePublished.ToString("yyyy-MM-dd")'/>
            </div>
            <div class="form-group mb-2">
                <label>Book Cover</label> 
                <div class="input-group mb-3 border rounded-3 p-2">
                    <div class="custom-file">
                        <input type="file" id="fileInput">
                        <img id="imagePreview" src="data:image/png;base64,@Model.BookCoverBase64" alt="Book Cover"/>
                    </div> 
                </div>
            </div>

            @* Carrier for the initial value of the Base64 *@
            <input type="hidden" id="base64Image" name="BookCoverBase64" value="data:image/png;base64,@Model.BookCoverBase64" asp-for="BookCoverBase64"/>
            <div class="d-flex justify-content-end gap-2"> 
                <button type="submit" class="btn btn-primary">Edit Book</button>
                <a asp-action="Index" asp-controller="Book" class="btn btn-danger">Cancel</a> 
            </div>
        </div>
    </div>
</form>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Get today's date in the format YYYY-MM-DD
            const today = new Date().toISOString().split('T')[0];
            // Set the max attribute of the date input to today's date
            document.getElementById('date').setAttribute('max', today);

            const fileInput = document.getElementById('fileInput');
            const imagePreview = document.getElementById('imagePreview');
            const base64Image = document.getElementById('base64Image');

            // Strip the prefix from the default value of base64Image
            base64Image.value = stripBase64Prefix(base64Image.value);

            fileInput.addEventListener('change', function(event) {
                const file = event.target.files[0];
                if (file) {
                    convertFileToBase64(file, function(base64String) {
                        const strippedBase64String = stripBase64Prefix(base64String);
                        imagePreview.src = `data:image/png;base64,${strippedBase64String}`;
                        base64Image.value = strippedBase64String;
                    });
                }
            });

            function convertFileToBase64(file, callback) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const base64String = e.target.result;
                    callback(base64String);
                };
                reader.onerror = function(error) {
                    console.error('Error reading file:', error);
                };
                reader.readAsDataURL(file);
            }

            function stripBase64Prefix(base64String) {
                const prefix = 'data:image/png;base64,';
                if (base64String.startsWith(prefix)) {
                    return base64String.slice(prefix.length);
                }
                return base64String;
            }
        });
    </script>